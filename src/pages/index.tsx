/* eslint-disable @typescript-eslint/restrict-template-expressions */
import { type NextPage } from "next";
import Head from "next/head";

// import { api } from "~/utils/api";
// import { useState } from "react";
import { useSession } from "next-auth/react";
import { Heading, UrlForm, UrlList } from "~/components";

import styles from "./index.module.scss";
import { type Metadata, type Url } from "@prisma/client";
import { api } from "~/utils/api";

export type UrlWithMetadata = Url & {
	metadata: Metadata | null;
};

export type LocalUrl = Pick<Url, "code" | "destinationUrl">;

const Home: NextPage = () => {
	// const [destinationUrl, setDestinationUrl] = useState("");

	const session = useSession();
	console.log("ðŸš€ ~ file: index.tsx:15 ~ session:", session);

	// TODO: Get URLs by user ID
	const { data: urls } = api.url.getAll.useQuery();

	// const ctx = api.useContext();

	// const { mutateAsync: createUrl } = api.url.create.useMutation({
	// 	onSuccess: (data) => {
	// 		void ctx.url.getByUserId.invalidate();
	// 		console.log("ðŸš€ ~ file: index.tsx:22 ~ onSuccess: ~ data", data);
	// 	},
	// 	onError(error, variables, context) {
	// 		console.error(
	// 			`Error: ${error.message} \n\n Variables: ${JSON.stringify(variables, null, 2)}`
	// 		);
	// 	},
	// });

	// async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {
	// 	e.preventDefault();

	// 	try {
	// 		const newUrl = await createUrl({ destinationUrl });
	// 		console.log("ðŸš€ ~ file: index.tsx:29 ~ handleSubmit ~ newUrl:", newUrl);
	// 	} catch (error) {
	// 		console.error(error);
	// 	}

	// 	setDestinationUrl("");
	// }

	// function handleCopy(text: string) {
	// 	void navigator.clipboard.writeText(text).then(() => alert(`Copied ${text}`));
	// }

	return (
		<>
			<Head>
				<title>teeny.fun</title>
				<meta
					name="description"
					content="Generated by create-t3-app"
				/>
				<link
					rel="icon"
					href="/favicon.png"
					type="image/png"
				/>
			</Head>
			<main className={styles.main}>
				<header className={styles.header}>
					<Heading tag="h1">
						<Heading.Span
							text="teenify"
							color="yellow"
							index={0}
						/>
						<Heading.Span
							text="URLs with"
							color="white"
							index={1}
						/>
						<Heading.Span
							text="emojis"
							color="yellow"
							index={2}
						/>
					</Heading>
				</header>
				<section className={styles.container}>
					<UrlForm
					// onSubmit={(e) => void handleSubmit(e)}
					/>
					{urls && (
						<UrlList
							urls={urls}
							// urls={[
							// 	{
							// 		id: "1",
							// 		destinationUrl: "https://nextjs.org/docs/advanced-features/middleware",
							// 		code: "ðŸ‘€",
							// 		codePoints: "1f440",
							// 		visits: 0,
							// 		createdAt: new Date(),
							// 		updatedAt: new Date(),
							// 		userId: null,
							// 		metadataId: "1",
							// 	},
							// ]}
						/>
					)}
				</section>
			</main>
		</>
	);
};

export default Home;
